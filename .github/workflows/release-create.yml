name: Package the Create Modpack

on:
  push:
    # paths:
    #   - 'create/**'
  workflow_dispatch:

jobs:
  determine-version-and-collect-changelogs:
    runs-on: ubuntu-24.04
    name: Determine Version and Collect Changelogs

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Determine Version Number from Changelog
        id: determine_version
        run: |
          CHANGELOG_FILE=$(ls create/changelogs/version-*.diff | sort -V | tail -n 1)
          if [ -z "$CHANGELOG_FILE" ]; then
            echo "No changelog file found."
            exit 1
          fi
          VERSION=$(basename "$CHANGELOG_FILE" .diff | sed 's/version-//')
          echo "Determined version: $VERSION"
          echo "$VERSION" > version.txt

      - name: Upload Version
        uses: actions/upload-artifact@v4
        with:
          name: version
          path: version.txt

      - name: Collect Changelogs from File
        id: changelogs
        run: |
          VERSION=$(cat version.txt)
          CHANGELOG_FILE="create/changelogs/version-${VERSION}.diff"
          if [ -f "$CHANGELOG_FILE" ]; then
            cat "$CHANGELOG_FILE" > changelogs.txt
          else
            echo "Changelog file $CHANGELOG_FILE does not exist."
            exit 1
          fi

      - name: Upload Changelogs
        uses: actions/upload-artifact@v4
        with:
          name: changelogs
          path: changelogs.txt

  build-and-release-curseforge:
    runs-on: ubuntu-24.04
    needs: determine-version-and-collect-changelogs
    name: Build and Release CurseForge Modpack

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Download Version and Changelogs
        uses: actions/download-artifact@v4
        with:
          name: version

      - name: Download Changelogs
        uses: actions/download-artifact@v4
        with:
          name: changelogs

      - name: Set Up Build Directory
        run: |
          mkdir -p build
          cd create/curseforge
          zip -r ../../build/cogworks-create-curseforge.zip overrides/ modlist.html manifest.json
          cd ../..
          echo "Built CurseForge modpack"

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: cogworks-create-curseforge
          path: build/cogworks-create-curseforge.zip

      - name: Install Wrangler CLI
        run: npm install -g wrangler

      - name: Configure Wrangler
        run: |
          wrangler login
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CF_API_TOKEN }}

      - name: Upload to Cloudflare R2
        run: |
          wrangler r2 object put cogworks/modpacks/cogworks-create-curseforge.zip --file build/cogworks-create-curseforge.zip
          echo "Uploaded CurseForge modpack to Cloudflare R2"
        env:
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CF_API_TOKEN }}

      - name: Notify Success
        run: echo "Modpack successfully built & uploaded to Cloudflare R2"

  build-and-release-modrinth:
    runs-on: ubuntu-20.04
    needs: determine-version-and-collect-changelogs
    name: Build and Release Modrinth Modpack

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Download Version and Changelogs
        uses: actions/download-artifact@v4
        with:
          name: version

      - name: Download Changelogs
        uses: actions/download-artifact@v4
        with:
          name: changelogs

      - name: Update Version in modrinth.index.json
        run: |
          VERSION=$(cat version.txt)
          jq --arg version "$VERSION" '.versionId = $version' create/modrinth/modrinth.index.json > create/modrinth/modrinth.index.json.tmp
          mv create/modrinth/modrinth.index.json.tmp create/modrinth/modrinth.index.json
          echo "Updated version in modrinth.index.json"

      - name: Set Up Build Directory
        run: |
          mkdir -p build
          cd create/modrinth
          zip -r ../../build/cogworks-create-modrinth.mrpack overrides/ modlist.html manifest.json modrinth.index.json
          cd ../..
          echo "Built Modrinth modpack"

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: cogworks-create-modrinth
          path: build/cogworks-create-modrinth.mrpack

      - name: Install Wrangler CLI
        run: npm install -g wrangler

      - name: Configure Wrangler
        run: |
          wrangler login
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CF_API_TOKEN }}

      - name: Upload to Cloudflare R2
        run: |
          wrangler r2 object put cogworks/modpacks/cogworks-create-modrinth.mrpack --file build/cogworks-create-modrinth.mrpack && echo "Uploaded Modrinth modpack to Cloudflare R2"
        env:
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CF_API_TOKEN }}

      - name: Notify Success
        run: echo "Modpack successfully built & uploaded to Cloudflare R2"

  upload-to-github:
    runs-on: ubuntu-20.04
    needs: [build-and-release-curseforge, build-and-release-modrinth]
    name: Upload to GitHub Releases

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Download Version and Changelogs
        uses: actions/download-artifact@v4
        with:
          name: version

      - name: Download Changelogs
        uses: actions/download-artifact@v4
        with:
          name: changelogs

      - name: Download CurseForge Artifact
        uses: actions/download-artifact@v4
        with:
          name: cogworks-create-curseforge

      - name: Download Modrinth Artifact
        uses: actions/download-artifact@v4
        with:
          name: cogworks-create-modrinth

      - name: Set Environment Variables & Create Release
        run: |
          VERSION=$(cat version.txt)
          CHANGELOGS=$(cat changelogs.txt)
      
          curl -X POST \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d "$(jq -n --arg tag_name "Create-v$VERSION" \
                          --arg target_commitish "main" \
                          --arg name "Create Release v$VERSION (CurseForge and Modrinth)" \
                          --arg body "**Changelogs:**\n\`\`\`diff\n$($CHANGELOGS)\n\`\`\`\n\n[Download the latest CurseForge version here](https://cdn.cogworksmc.com/modpacks/cogworks-create-curseforge.zip)\n[Download the latest Modrinth version here](https://cdn.cogworksmc.com/modpacks/cogworks-create-modrinth.mrpack)" \
                          --argjson draft false \
                          --argjson prerelease false \
                          --argjson generate_release_notes true \
                          '{tag_name: $tag_name, target_commitish: $target_commitish, name: $name, body: $body, draft: $draft, prerelease: $prerelease, generate_release_notes: $generate_release_notes}')" \
            https://api.github.com/repos/CogworksMC/modpacks/releases
      
  send-discord-notification:
    runs-on: ubuntu-20.04
    needs: upload-to-github
    name: Send Discord Notification

    steps:
      - name: Download Version and Changelogs
        uses: actions/download-artifact@v4
        with:
          name: version

      - name: Download Changelogs
        uses: actions/download-artifact@v4
        with:
          name: changelogs

      - name: Send Discord Webhook
        run: |
          VERSION=$(cat version.txt)
          CHANGELOGS=$(cat changelogs.txt)
      
          curl -X POST \
            -H "Content-Type: application/json" \
            -d "$(jq -n --arg content 'Hey <@&1329954969268523139>' \
                          --arg title "Create Modpack v$VERSION has been released!" \
                          --arg description "**Changelogs:**\n\`\`\`diff\n$CHANGELOGS\n\`\`\`\n[Download the latest CurseForge version here](https://cdn.cogworksmc.com/modpacks/cogworks-create-curseforge.zip)\n[Download the latest Modrinth version here](https://cdn.cogworksmc.com/modpacks/cogworks-create-modrinth.mrpack)" \
                          --argjson color 16753920 \
                          '{content: $content, embeds: [{title: $title, color: $color, description: $description}]}')" \
            ${{ secrets.DISCORD_WEBHOOK_URL }}
        
    
name: Package the Create Modpack

on:
  push:
    paths:
      - 'create/**'
  workflow_dispatch:

jobs:
  build-and-release:
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Determine Version Number from Changelog
        id: determine_version
        run: |
          CHANGELOG_FILE=$(ls create/changelogs/version-*.txt | sort -V | tail -n 1)
          if [ -z "$CHANGELOG_FILE" ]; then
            echo "No changelog file found."
            exit 1
          fi
          VERSION=$(basename "$CHANGELOG_FILE" .txt | sed 's/version-//')
          echo "current_version=$VERSION" >> $GITHUB_ENV

      - name: Collect Changelogs from File
        id: changelogs
        run: |
          CHANGELOG_FILE="create/changelogs/version-${{ env.current_version }}.txt"
          if [ -f "$CHANGELOG_FILE" ]; then
            CHANGELOGS=$(jq -R -s . < "$CHANGELOG_FILE")
            echo "changelogs=$CHANGELOGS" >> $GITHUB_ENV
          else
            echo "Changelog file $CHANGELOG_FILE does not exist."
            exit 1
          fi

  build-and-release-curseforge:
    runs-on: ubuntu-20.04
    needs: build-and-release

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set Up Build Directory
        run: |
          mkdir -p build
          cd create/curseforge
          zip -r ../../build/cogworks-create-curseforge.zip overrides/ modlist.html manifest.json
          cd ../..

      - name: Install Wrangler CLI
        run: npm install -g wrangler

      - name: Configure Wrangler
        run: |
          wrangler login
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CF_API_TOKEN }}

      - name: Upload to Cloudflare R2
        run: |
          wrangler r2 object put cogworks/modpacks/cogworks-create-curseforge.zip --file build/cogworks-create-curseforge.zip
        env:
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CF_API_TOKEN }}

      - name: Upload Modpack to CurseForge
        run: |
          curl -X POST "https://minecraft.curseforge.com/api/projects/YOUR_PROJECT_ID/upload-file" \
          -H "x-api-token: ${{ secrets.CURSEFORGE_API_TOKEN }}" \
          -F "file=@build/cogworks-create-curseforge.zip" \
          -F "metadata={\"changelog\":\"${{ env.changelogs }}\",\"changelogType\":\"markdown\",\"releaseType\":\"release\"}" \
          -F "gameVersions=[\"1.20.1\"]"
      
      - name: Notify Success
        run: echo "Modpack successfully built & uploaded to Cloudflare R2 and CurseForge"

  build-and-release-modrinth:
    runs-on: ubuntu-20.04
    needs: build-and-release

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Update Version in modrinth.index.json
        run: |
          jq --arg version "$CURRENT_VERSION" '.versionId = $version' create/modrinth/modrinth.index.json > create/modrinth/modrinth.index.json.tmp
          mv create/modrinth/modrinth.index.json.tmp create/modrinth/modrinth.index.json
  
      - name: Set Up Build Directory
        run: |
          mkdir -p build
          cd create/modrinth
          zip -r ../../build/cogworks-create-modrinth.zip overrides/ modlist.html manifest.json modrinth.index.json
          cd ../..

      - name: Install Wrangler CLI
        run: npm install -g wrangler

      - name: Configure Wrangler
        run: |
          wrangler login
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CF_API_TOKEN }}

      - name: Upload to Cloudflare R2
        run: |
          wrangler r2 object put cogworks/modpacks/cogworks-create-modrinth.zip --file build/cogworks-create-modrinth.zip
        env:
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CF_API_TOKEN }}

      - name: Notify Success
        run: echo "Modpack successfully built & uploaded to Cloudflare R2 and Modrinth"

  upload-to-github:
    runs-on: ubuntu-20.04
    needs: [build-and-release-curseforge, build-and-release-modrinth]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Upload Modpacks to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: "Create Release v${{ env.current_version }}"
          tag_name: "Create-v${{ env.current_version }}"
          body: |
            **Changelogs:**
            ```diff
            ${{ env.changelogs }}
            ```
            
            [Download the latest CurseForge version here](https://cdn.cogworksmc.com/modpacks/cogworks-create-curseforge.zip)
            [Download the latest Modrinth version here](https://cdn.cogworksmc.com/modpacks/cogworks-create-modrinth.zip)
          generate_release_notes: true
          make_latest: true
          files: |
            build/cogworks-create-curseforge.zip
            build/cogworks-create-modrinth.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  send-discord-notification:
    runs-on: ubuntu-20.04
    needs: upload-to-github

    steps:
      - name: Send Discord Notification
        uses: sarisia/actions-status-discord@v1
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK_URL }}
          nodetail: true
          content: "Hey <@&1329954969268523139>"
          title: "Create Modpack v${{ env.current_version }} has been released!"
          color: 0xFFA500
          description: |
            **Changelogs:**
                ```diff
                ${{ env.changelogs }}
                ```
            [Download the latest CurseForge version here](https://cdn.cogworksmc.com/modpacks/cogworks-create-curseforge.zip)
            [Download the latest Modrinth version here](https://cdn.cogworksmc.com/modpacks/cogworks-create-modrinth.zip)

name: Package the Create Modpack

on:
  push:
    paths:
      - 'create/**'
  workflow_dispatch:

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set Up Build Directory
        run: |
          mkdir -p build
          zip -r build/create-modpack.zip ./create/overrides/ ./create/manifest.json ./create/modrinth.index.json

      - name: Determine Version Number
        id: determine_version
        run: |
          VERSION_FILE="create/version.txt"
          if [ ! -f $VERSION_FILE ]; then
            echo "1.0.0" > $VERSION_FILE
          fi
          CURRENT_VERSION=$(cat $VERSION_FILE)
          echo "current_version=$CURRENT_VERSION" >> $GITHUB_ENV
      - name: Update Version in modrinth.index.json
        run: |
          jq --arg version "$CURRENT_VERSION" '.versionId = $version' create/modrinth.index.json > create/modrinth.index.json.tmp && mv create/modrinth.index.json.tmp create/modrinth.index.json
  
      - name: Update Version in manifest.json
        run: |
          jq --arg version "$CURRENT_VERSION" '.version = $version' create/manifest.json > create/manifest.json.tmp && mv create/manifest.json.tmp create/manifest.json

      - name: Collect Changelogs Using Tags
        id: collect_changelogs
        uses: actions/github-script@v6
        with:
            script: |
              const { execSync } = require('child_process');
        
              // Fetch tags
              const tags = execSync('git tag --sort=-creatordate', { encoding: 'utf8' })
                .split('\n')
                .filter(tag => tag.startsWith('Create-v') && tag.trim() !== '');
        
              if (tags.length < 2) {
                core.setOutput('changelogs', 'No previous tag found.');
                return;
              }
        
              const [latestTag, previousTag] = tags;
              const changelogs = execSync(`git log ${previousTag}..${latestTag} --pretty=format:"%s"`, { encoding: 'utf8' })
                .split('\n')
                .filter(line => line.startsWith('[Changelog]: '))
                .map(line => line.replace('[Changelog]: ', ''))
                .join('\\n');
        
              core.setOutput('changelogs', changelogs);
            result-encoding: string

      - name: Update Changelog in README
        run: |
          sed -i "/## Changelog/a - **Version ${{ env.new_version }}**: ${{ env.changelogs }}" create/readme.md
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add create/readme.md
          git commit -m "Update changelog for version ${{ env.new_version }}"
          git push

      - name: Upload Modpack to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: "Create Release v${{ env.new_version }}"
          tag_name: "Create-v${{ env.new_version }}"
          body: ${{ env.changelogs }}
          generate_release_notes: true
          make_latest: true
          files: build/create-modpack.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Wrangler CLI
        run: npm install -g wrangler

      - name: Configure Wrangler
        run: |
          wrangler login
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CF_API_TOKEN }}

      - name: Upload to Cloudflare R2
        run: |
          wrangler r2 object put cogworks/modpacks/create-modpack.zip --file build/create-modpack.zip
        env:
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
          CLOUDFLARE_API_TOKEN: ${{ secrets.CF_API_TOKEN }}

      - name: Notify Success
        run: echo "Modpack successfully built & uploaded to GitHub and Cloudflare R2!"

      - name: Send Discord Notification
        run: |
          curl -H "Content-Type: application/json" \
               -X POST \
               -d '{
                     "embeds": [{
                       "title": "New Modpack Version Released!",
                       "description": "Version v${{ env.new_version }} has been released.",
                       "fields": [
                         {
                           "name": "Changelogs",
                           "value": "'"${{ env.changelogs }}"'"
                         }
                       ],
                       "color": 5814783
                     }]
                   }' \
               ${{ secrets.DISCORD_WEBHOOK_URL }}